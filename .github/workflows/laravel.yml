name: Laravel

on:
  push:
    branches: main
  pull_request:
    branches: main
    types: [merged]

jobs:
  build-js:
    name: Build Js/Css
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Cache NODE dependencies
        id: node-cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts
      - name: NPM Build
        run: |
          touch .env
          echo "APP_ENV=production" >> .env
          echo 'MIX_APP_ENV=${APP_ENV}' >> .env
          echo "PUSHER_KEY=${{ secrets.PRODUCTION_PUSHER_KEY }}" >> .env
          echo "PUSHER_CLUSTER=${{ secrets.PRODUCTION_PUSHER_CLUSTER }}" >> .env
          echo 'MIX_PUSHER_APP_KEY=${PUSHER_KEY}' >> .env
          echo 'MIX_PUSHER_APP_CLUSTER=${PUSHER_CLUSTER}' >> .env
          echo "TIDIO_PUBLIC_KEY=${{ secrets.TIDIO_PUBLIC_KEY }}" >> .env
          echo 'MIX_TIDIO_PUBLIC_KEY=${TIDIO_PUBLIC_KEY}' >> .env
          npm run prod
          cat public/mix-manifest.json # See asset versions in log
      - name: Upload build files
        uses: actions/upload-artifact@v1
        with:
          name: assets
          path: public
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-js]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v1
      - name: Download build assets
        uses: actions/download-artifact@v1
        with:
          name: assets
          path: public
      # delete-artifact
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: assets
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 7.4
      - name: Cache PHP dependencies
        uses: actions/cache@v2
        id: vendor-cache
        with:
          path: ./vendor
          key: vendor-${{ hashFiles('composer.lock') }}
      - name: Composer install
        if: steps.vendor-cache.outputs.cache-hit != 'true'
        run: composer install --optimize-autoloader --no-interaction --prefer-dist --ignore-platform-reqs --no-dev
      - name: Setup Deployer
        uses: atymic/deployer-php-action@master
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-known-hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
      - name: Deploy to Prod
        env:
          DOT_ENV: ${{ secrets.DOT_ENV }}
        run: dep deploy production --tag='refs/heads/main' -vvv
